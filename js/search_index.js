var search_data = {"index":{"searchIndex":["address_record","adoption_record","association_record","bit","btree","btree_data","btree_node","cause_record","change_date_record","character_set_record","chart","citation_data_record","citation_event_type_record","classtracker","copyright_record","corporate_record","date_record","decendant","encoded_line_record","event_age_record","event_record","events_list_record","families_individuals","family_record","gedcombase","gedline","gedstring","gedcom","gedcomparser","gedcom_record","header_data_record","header_record","header_source_record","individual_attribute_record","individual_record","instruction","multimedia_citation_record","multimedia_file_record","multimedia_format_record","multimedia_obje_file_record","multimedia_obje_format_record","multimedia_record","name_phonetic_record","name_record","name_romanized_record","note_citation_record","note_record","object","pedigree_width","parsestate","place_record","placename_map_record","placename_phonetic_record","placename_romanized_record","refn_record","repository_caln","repository_citation_record","repository_record","source_citation_record","source_record","source_scope_record","submission_record","submitter_record","text_record","trailer_record","transmission","transmissionbase","xref","<<()","action_handler()","add_to_class_field()","add_to_index()","add_transmission()","adoption()","adult_christening()","annulment()","append_nl_field()","append_sp_field()","append_to_field()","attr_type()","attr_type=()","attribute()","baptism()","bar()","bar_mitzvah()","bars()","bas_mitzvah()","birth()","blessing()","burial()","caste_name()","census()","census()","changed()","changed?()","child?()","children()","christening()","clear()","clear?()","confirmation()","copyright()","create_class()","create_index()","created?()","cremation()","date()","date()","death()","decendants()","decendants_of_name()","define()","defined()","divorce()","divorce_filed()","dump()","dump_indexes()","each()","each()","each_with_index()","each_word()","each_word_with_index()","education()","emigration()","engagement()","event()","event()","event_tag()","event_tag()","exists?()","file()","file()","filename()","find()","find()","first_communion()","format()","graduation()","has_name?()","html?()","husband()","id()","id()","immigration()","index()","is_attribute?()","is_event?()","last_state()","lastbar()","lastspace()","lds_baptism()","lds_child_sealing()","lds_confirmation()","lds_endowment()","lds_spouse_sealing()","level()","locked?()","marriage()","marriage_bann()","marriage_contract()","marriage_count()","marriage_license()","marriage_settlement()","name()","name()","name()","names()","national_id_number()","national_origin()","naturalization()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","no_tabs()","number_children()","occupation()","ordination()","output_pedigree_name()","own_family()","parents_family()","parents_family()","parse()","path()","phonetic_name()","physical_description()","place()","place()","pop()","pop()","possessions()","primary_name()","private?()","probate()","religion()","residence()","retirement()","romanized_name()","save()","self_check()","self_check()","self_check()","set()","set?()","sex()","social_security_number()","spouse?()","spouses()","state()","summary()","summary()","tabs()","time()","title()","to_db()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_gedcom()","to_s()","to_s()","to_s()","to_s()","to_s_ordered()","to_s_r()","token_to_s()","type()","type()","update_field()","user_tag()","user_tag?()","validate()","value()","value=()","wife()","will()","xref_check()","xref_check()","history","manifest","readme","readme"],"longSearchIndex":["address_record","adoption_record","association_record","bit","btree","btree_data","btree_node","cause_record","change_date_record","character_set_record","chart","citation_data_record","citation_event_type_record","classtracker","copyright_record","corporate_record","date_record","decendant","encoded_line_record","event_age_record","event_record","events_list_record","families_individuals","family_record","gedcombase","gedline","gedstring","gedcom","gedcomparser","gedcom_record","header_data_record","header_record","header_source_record","individual_attribute_record","individual_record","instruction","multimedia_citation_record","multimedia_file_record","multimedia_format_record","multimedia_obje_file_record","multimedia_obje_format_record","multimedia_record","name_phonetic_record","name_record","name_romanized_record","note_citation_record","note_record","object","pedigree_width","parsestate","place_record","placename_map_record","placename_phonetic_record","placename_romanized_record","refn_record","repository_caln","repository_citation_record","repository_record","source_citation_record","source_record","source_scope_record","submission_record","submitter_record","text_record","trailer_record","transmission","transmissionbase","xref","classtracker::<<()","transmissionbase#action_handler()","transmissionbase#add_to_class_field()","transmissionbase#add_to_index()","gedcom#add_transmission()","individual_record#adoption()","individual_record#adult_christening()","family_record#annulment()","transmissionbase#append_nl_field()","transmissionbase#append_sp_field()","transmissionbase#append_to_field()","individual_attribute_record#attr_type()","individual_attribute_record#attr_type=()","individual_record#attribute()","individual_record#baptism()","chart#bar()","individual_record#bar_mitzvah()","chart#bars()","individual_record#bas_mitzvah()","individual_record#birth()","individual_record#blessing()","individual_record#burial()","individual_record#caste_name()","family_record#census()","individual_record#census()","gedcombase#changed()","gedcombase#changed?()","individual_record#child?()","family_record#children()","individual_record#christening()","bit#clear()","bit#clear?()","individual_record#confirmation()","header_data_record#copyright()","transmissionbase#create_class()","transmissionbase#create_index()","gedcombase#created?()","individual_record#cremation()","date_record#date()","event_record#date()","individual_record#death()","decendant#decendants()","decendant#decendants_of_name()","transmissionbase#define()","transmissionbase#defined()","family_record#divorce()","family_record#divorce_filed()","parsestate#dump()","transmission#dump_indexes()","gedstring#each()","gedcom#each()","gedstring#each_with_index()","gedstring#each_word()","gedstring#each_word_with_index()","individual_record#education()","individual_record#emigration()","family_record#engagement()","family_record#event()","individual_record#event()","event_record#event_tag()","name_record#event_tag()","classtracker::exists?()","gedcom#file()","gedcom::file()","multimedia_record#filename()","gedcombase#find()","transmission#find()","individual_record#first_communion()","multimedia_record#format()","individual_record#graduation()","individual_record#has_name?()","chart#html?()","family_record#husband()","family_record#id()","individual_record#id()","individual_record#immigration()","gedline#index()","individual_attribute_record#is_attribute?()","event_record#is_event?()","parsestate#last_state()","chart#lastbar()","chart#lastspace()","individual_record#lds_baptism()","individual_record#lds_child_sealing()","individual_record#lds_confirmation()","individual_record#lds_endowment()","individual_record#lds_spouse_sealing()","parsestate#level()","gedcombase#locked?()","family_record#marriage()","family_record#marriage_bann()","family_record#marriage_contract()","individual_record#marriage_count()","family_record#marriage_license()","family_record#marriage_settlement()","name_phonetic_record#name()","name_record#name()","name_romanized_record#name()","individual_record#names()","individual_record#national_id_number()","individual_record#national_origin()","individual_record#naturalization()","address_record::new()","adoption_record::new()","association_record::new()","bit::new()","btree::new()","btree_data::new()","btree_node::new()","cause_record::new()","change_date_record::new()","character_set_record::new()","chart::new()","citation_data_record::new()","citation_event_type_record::new()","copyright_record::new()","corporate_record::new()","date_record::new()","decendant::new()","encoded_line_record::new()","event_record::new()","events_list_record::new()","family_record::new()","gedcombase::new()","gedline::new()","gedstring::new()","gedcom::new()","gedcomparser::new()","gedcom_record::new()","header_data_record::new()","header_record::new()","header_source_record::new()","individual_record::new()","instruction::new()","name_phonetic_record::new()","name_record::new()","name_romanized_record::new()","parsestate::new()","placename_map_record::new()","placename_phonetic_record::new()","placename_romanized_record::new()","refn_record::new()","repository_caln::new()","repository_citation_record::new()","repository_record::new()","source_scope_record::new()","submission_record::new()","submitter_record::new()","text_record::new()","trailer_record::new()","transmission::new()","transmissionbase::new()","xref::new()","gedcombase::no_tabs()","individual_record#number_children()","individual_record#occupation()","individual_record#ordination()","chart#output_pedigree_name()","families_individuals#own_family()","families_individuals#parents_family()","individual_record#parents_family()","gedcomparser#parse()","object#path()","name_phonetic_record#phonetic_name()","individual_record#physical_description()","event_record#place()","place_record#place()","parsestate#pop()","transmissionbase#pop()","individual_record#possessions()","individual_record#primary_name()","gedcombase#private?()","individual_record#probate()","individual_record#religion()","individual_record#residence()","individual_record#retirement()","name_romanized_record#romanized_name()","gedcombase#save()","family_record#self_check()","individual_record#self_check()","transmission#self_check()","bit#set()","bit#set?()","individual_record#sex()","individual_record#social_security_number()","individual_record#spouse?()","individual_record#spouses()","parsestate#state()","gedcomparser#summary()","transmissionbase#summary()","gedcombase::tabs()","date_record#time()","individual_record#title()","gedcombase#to_db()","event_age_record#to_gedcom()","event_record#to_gedcom()","families_individuals#to_gedcom()","gedcombase#to_gedcom()","multimedia_citation_record#to_gedcom()","multimedia_file_record#to_gedcom()","multimedia_format_record#to_gedcom()","multimedia_obje_file_record#to_gedcom()","multimedia_obje_format_record#to_gedcom()","multimedia_record#to_gedcom()","note_citation_record#to_gedcom()","note_record#to_gedcom()","place_record#to_gedcom()","source_citation_record#to_gedcom()","source_record#to_gedcom()","bit#to_s()","classtracker::to_s()","gedcombase#to_s()","gedline#to_s()","gedcombase#to_s_ordered()","gedcombase#to_s_r()","gedcombase#token_to_s()","multimedia_format_record#type()","multimedia_obje_format_record#type()","transmissionbase#update_field()","gedline#user_tag()","gedline#user_tag?()","transmissionbase#validate()","individual_attribute_record#value()","individual_attribute_record#value=()","family_record#wife()","individual_record#will()","association_record#xref_check()","gedcombase#xref_check()","","","",""],"info":[["Address_record","","Address_record.html","","<p>Address_record a sub-record of HEAD, REPO, SUBM and all types of Event\nrecords.\n<p>ADDRESS_STRUCTURE:=\n\n<pre>n ADDR ...</pre>\n"],["Adoption_record","","Adoption_record.html","","<p>Adoption_record is a rarely seen sub-record of FAMC in Individual\nEvent_record.  These can occur is  ...\n"],["Association_record","","Association_record.html","","<p>Internal representation of the GEDCOM ASSO record types.\n<p>A relationship between an Individual_record ...\n"],["Bit","","Bit.html","","<p>Simple Bit array class to hold state for our tree drawing class.\n"],["Btree","","Btree.html","","<p>Balanced binary tree methods\n"],["Btree_data","","Btree_data.html","","<p>btree for holding sorted indexes of names in our transmission Should look\nat replacing this with either ...\n"],["Btree_node","","Btree_node.html","",""],["Cause_record","","Cause_record.html","","<p>Cause_record is part of Event_record, recording the cause of the event.\nThey aren't often seen in GEDCOM ...\n"],["Change_date_record","","Change_date_record.html","","<p>Change_date_record is part of many other records, recording the date and\ntime that the parent record ...\n"],["Character_set_record","","Character_set_record.html","","<p>Character_set_record is part of the HEAD record, and names the the\ncharacter set used in this transmission. ...\n"],["Chart","","Chart.html","",""],["Citation_data_record","","Citation_data_record.html","","<p>Citation_data_record is DATA record in a Source_citation_record.\n<p>SOURCE_CITATION:= (within another record, ...\n"],["Citation_event_type_record","","Citation_event_type_record.html","","<p>Source_citation_record has an EVEN tag. This is not an Event_record, but\nthe event type that the source ...\n"],["ClassTracker","","ClassTracker.html","","<p>ClassTracker keeps track of the existence of our gedcom classes. If they\ndon't exist yet, the parser ...\n"],["Copyright_record","","Copyright_record.html","","<p>Copyright_record was introduced in 0.9.3 to allow CONT and CONC tags after\nthe COPR record. Gedcom 5.5 ...\n"],["Corporate_record","","Corporate_record.html","","<p>The Corparte_record is part of the HEAD records SOUR record.\n<p>HEADER:=\n\n<pre>0 HEAD                           ...</pre>\n"],["Date_record","","Date_record.html","","<p>Dates are stored here. In GEDCOM, they have to have the flexibility to hold\nmultiple data formats, both ...\n"],["Decendant","","Decendant.html","","<p>Construction of decendant charts\n"],["Encoded_line_record","","Encoded_line_record.html","","<p>An inline Multimedia_record uses BLOB records to hold the data. This is\nunusual in practice, as it bloats ...\n"],["Event_age_record","","Event_age_record.html","","<p>HUSB and WIFE tags can have an AGE record associated with them.\n<p>FAM_RECORD:=\n\n<pre>0 @&lt;XREF:FAM&gt;@ FAM        ...</pre>\n"],["Event_record","","Event_record.html","","<p>Event_record holds multiple GEDCOM event record types. The type being held\nin @event_type.\n<p>The following ...\n"],["Events_list_record","","Events_list_record.html","","<p>The SOURCE_RECORD's DATA tag has an EVEN record, which differs from the \nfamily or individual EVEN record ...\n"],["Families_individuals","","Families_individuals.html","","<p>Family_individuals hold the FAMC and FAMS relationship between\nIndividual_record and Family_record.\n<p>CHILD_TO_FAMILY_LINK ...\n"],["Family_record","","Family_record.html","","<p>Family_record is the internal representation of a level 0 GEDCOM FAM\nrecord.\n<p>FAM_RECORD:=\n\n<pre>0 @&lt;XREF:FAM&gt;@ ...</pre>\n"],["GEDCOMBase","","GEDCOMBase.html","","<p>base routines shared by all gedcom objects.\n"],["GedLine","","GedLine.html","","<p>GedLine takes a GEDCOM line tokenised into a word array returning an object\nwith the:\n\n<pre>* level number ...</pre>\n"],["GedString","","GedString.html","","<p>Our parser tokenize strings into word arrays. This is helpful in word\nwrapping for CONT and CONC, but ...\n"],["Gedcom","","Gedcom.html","","<p>require 'chart.rb'\n"],["GedcomParser","","GedcomParser.html","","<p>Class GedcomParser is a GEDCOM 5.5 Parser\n<p>The GEDCOM 5.5 grammer is defined in the TAGS hash.\n\n<pre>* Each TAGS ...</pre>\n"],["Gedcom_record","","Gedcom_record.html","","<p>Internal representation of the GEDCOM GEDC record type in a HEAD record.\n<p>HEADER:=\n\n<pre>n HEAD               ...</pre>\n"],["Header_data_record","","Header_data_record.html","","<p>Internal representation of the GEDCOM DATA in a SOUR record in a level 0\nHEAD record type This is not ...\n"],["Header_record","","Header_record.html","","<p>Internal representation of the GEDCOM level 0 HEAD record type\n<p>HEADER:=\n\n<pre>n HEAD                         ...</pre>\n"],["Header_source_record","","Header_source_record.html","","<p>Internal representation of the GEDCOM SOUR record in a level 0 HEAD record.\nThese SOUR records are not ...\n"],["Individual_attribute_record","","Individual_attribute_record.html","","<p>Internal representation of the GEDCOM Individual_Attribute_Structure.\nIndividual_attribute_record subclasses ...\n"],["Individual_record","","Individual_record.html","","<p>Internal representation of the GEDCOM level 0 INDI record type\n<p>INDIVIDUAL_RECORD:=\n\n<pre>n @XREF:INDI@ INDI  ...</pre>\n"],["Instruction","","Instruction.html","","<p>Instruction names the array elements\n<p>The Action to perform\n<p>The Tag involved\n"],["Multimedia_citation_record","","Multimedia_citation_record.html","","<p>Internal representation of a reference to the GEDCOM level 0 OBJE record\ntype GEDCOM has both inline ...\n"],["Multimedia_file_record","","Multimedia_file_record.html","","<p>GEDCOM 5.5.1\n<p>MULTIMEDIA_LINK:=\n\n<pre> n OBJE  &lt;XREF&gt;                         {1:1} is a reference to level 0 ...</pre>\n"],["Multimedia_format_record","","Multimedia_format_record.html","","<p>GEDCOM 5.5.1\n<p>MULTIMEDIA_LINK:=\n\n<pre> n OBJE  &lt;XREF&gt;                         {1:1} is a reference to level 0 ...</pre>\n"],["Multimedia_obje_file_record","","Multimedia_obje_file_record.html","","<p>GEDCOM 5.5.1\n<p>Almost the same structure inline in OBJE record.\n\n<pre>Note TITL subordinate to FILE, rather than ...</pre>\n"],["Multimedia_obje_format_record","","Multimedia_obje_format_record.html","","<p>Almost the same structure inline in OBJE record.\n\n<pre>Note TITL subordinate to FILE, rather than at same level. ...</pre>\n"],["Multimedia_record","","Multimedia_record.html","","<p>Internal representation of the GEDCOM OBJE record type GEDCOM has both\ninline OBJE records and references ...\n"],["Name_phonetic_record","","Name_phonetic_record.html","","<p>GEDCOM 5.5.1 Draft adds as subordinate to NAME\n\n<pre>+1 FONE &lt;NAME_PHONETIC_VARIATION&gt;\n  +2 TYPE &lt;PHONETIC_TYPE&gt; ...</pre>\n"],["Name_record","","Name_record.html","","<p>Internal representation of the GEDCOM NAME record as described under\nPERSONAL_NAME_STRUCTURE This sub-classes ...\n"],["Name_romanized_record","","Name_romanized_record.html","","<p>GEDCOM 5.5.1 Draft adds as subordinate to NAME\n\n<pre>+1 ROMN &lt;NAME_ROMANIZED_VARIATION&gt;\n  +2 TYPE &lt;ROMANIZED_TYPE&gt; ...</pre>\n"],["Note_citation_record","","Note_citation_record.html","","<p>Internal representation of a reference to a GEDCOM NOTE_STRUCTURE, or\nreference to a Level 0 NOTE. NOTE ...\n"],["Note_record","","Note_record.html","","<p>Internal representation of the GEDCOM NOTE record type Both inline and\nlevel 0 NOTEs are stored here ...\n"],["Object","","Object.html","",""],["PEDIGREE_WIDTH","","PEDIGREE_WIDTH.html","",""],["ParseState","","ParseState.html","","<p>ParseState sub-classes Array to provide a stack for holding the current\nparse state.\n"],["Place_record","","Place_record.html","","<p>Internal representation of the GEDCOM PLAC record type. Sub-record of HEAD\nand EVENT\n<p>PLACE_STRUCTURE:= ...\n"],["Placename_map_record","","Placename_map_record.html","","<p>Placename_map_record\n<p>GEDCOM 5.5.1 Draft adds as subordinate to PLAC\n\n<pre>+1 MAP \n  +2 LATI &lt;PLACE_LATITUDE&gt; ...</pre>\n"],["Placename_phonetic_record","","Placename_phonetic_record.html","","<p>GEDCOM 5.5.1 Draft adds as subordinate to PLAC\n\n<pre>+1 FONE &lt;PLACE_PHONETIC_VARIATION&gt;\n  +2 TYPE &lt;PHONETIC_TYPE&gt;</pre>\n"],["Placename_romanized_record","","Placename_romanized_record.html","","<p>GEDCOM 5.5.1 Draft adds as subordinate to PLAC\n\n<pre>+1 ROMN &lt;PLACE_ROMANIZED_VARIATION&gt;\n  +2 TYPE &lt;PHONETIC_TYPE&gt;</pre>\n"],["Refn_record","","Refn_record.html","","<p>Internal representation of the GEDCOM REFN record type. A sub-record of the\nlevel 0 INDI,FAM,OBJE,NOTE ...\n"],["Repository_caln","","Repository_caln.html","","<p>Internal representation of the GEDCOM CALN record type, a sub-record of\nRepository_citation_record.\n<p>SOURCE_CALL_NUMBER ...\n"],["Repository_citation_record","","Repository_citation_record.html","","<p>Internal representation of a reference to the GEDCOM REPO citation record\ntype The actual REPO record ...\n"],["Repository_record","","Repository_record.html","","<p>Internal representation of the GEDCOM REPO record type This class is\nreferenced through the Repository_citation_record ...\n"],["Source_citation_record","","Source_citation_record.html","","<p>Internal representation of a reference to the GEDCOM SOUR record type. Both\ninline SOUR records and references ...\n"],["Source_record","","Source_record.html","","<p>Internal representation of the GEDCOM SOUR record type Both inline and\nreferences to Level 0 Source_records ...\n"],["Source_scope_record","","Source_scope_record.html","","<p>Internal representation of the GEDCOM DATA record type, a record type under\nthe GEDCOM Level 0 SOUR record ...\n"],["Submission_record","","Submission_record.html","","<p>Internal representation of the GEDCOM SUBN record type\n<p>SUBMISSION_RECORD:=\n\n<pre>0 @XREF:SUBN@ SUBN          ...</pre>\n"],["Submitter_record","","Submitter_record.html","","<p>Internal representation of the GEDCOM SUBM record type\n<p>SUBMITTER_RECORD:=\n\n<pre>0 @&lt;XREF:SUBM&gt;@ SUBM         ...</pre>\n"],["Text_record","","Text_record.html","","<p>Internal representation of the GEDCOM TEXT record type.\n<p>This tag is used in SOUR and SOUR.DATA records ...\n"],["Trailer_record","","Trailer_record.html","","<p>Internal representation of the GEDCOM TRLR record that terminates\ntransmissions. The Trailer_record class ...\n"],["Transmission","","Transmission.html","","<p>Transmission subclasses TransmissionBase, providing a cleaner view for\npublic consumption.\n<p>TransmissionBase ...\n"],["TransmissionBase","","TransmissionBase.html","","<p>TransmissionBase is a subclass of GEDCOMBase, and contains methods used by\nthe parsing process to build ...\n"],["Xref","","Xref.html","","<p>Utility class just to make referencing xrefs clearer.\n"],["<<","ClassTracker","ClassTracker.html#method-c-3C-3C","(class_name)","<p>Adds a class to the @@classes hash using the &lt;&lt; operator.\n"],["action_handler","TransmissionBase","TransmissionBase.html#method-i-action_handler","( lineno, tokens, child_record = nil, min_occurances = 0, max_occurances = nil, data_type = nil, max_data_size = nil, action = nil, data_description = '' )",""],["add_to_class_field","TransmissionBase","TransmissionBase.html#method-i-add_to_class_field","(lineno, record, data)","<p>add_to_class_field() is part of the parsing process, and checks to see if\nthe field exists in the current ...\n"],["add_to_index","TransmissionBase","TransmissionBase.html#method-i-add_to_index","(lineno, field_name, index_name, key)","<p>add_to_index is part of the parsing process, and adds references into the\ncurrent target object to the ...\n"],["add_transmission","Gedcom","Gedcom.html#method-i-add_transmission","(transmission)",""],["adoption","Individual_record","Individual_record.html#method-i-adoption","(&p)","<p>Short hand for event('ADOP') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["adult_christening","Individual_record","Individual_record.html#method-i-adult_christening","(&p)","<p>Short hand for event('CHRA') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["annulment","Family_record","Family_record.html#method-i-annulment","(&p)","<p>Short hand for event('ANUL') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["append_nl_field","TransmissionBase","TransmissionBase.html#method-i-append_nl_field","(lineno, field, data_type, data)","<p>append_nl_field is part of the parsing process, and inserts a 'n' character\nin front of the data, then ...\n"],["append_sp_field","TransmissionBase","TransmissionBase.html#method-i-append_sp_field","(lineno, field, data_type, data)","<p>append_sp_field is part of the parsing process, and inserts a ' ' character\nin front of the data, then ...\n"],["append_to_field","TransmissionBase","TransmissionBase.html#method-i-append_to_field","(lineno, field, data_type, data)","<p>append_to_field is part of the parsing process, and adds the data to the\nend of the field's array. Shared ...\n"],["attr_type","Individual_attribute_record","Individual_attribute_record.html#method-i-attr_type","()","<p>attr_type retrieves the attribute type from the Event_record#event_type\nfield. this minor hack lets us ...\n"],["attr_type=","Individual_attribute_record","Individual_attribute_record.html#method-i-attr_type-3D","(value)","<p>attr_type= stores the attribute type in the event_type field. this minor\nhack lets us share methods with ...\n"],["attribute","Individual_record","Individual_record.html#method-i-attribute","(attribute)","<p>Attribute looks in the Individual_record for attributes, as specified by\nthe attribute argument,  returning ...\n"],["baptism","Individual_record","Individual_record.html#method-i-baptism","(&p)","<p>Short hand for event('BAPM') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["bar","Chart","Chart.html#method-i-bar","(depth)","<p>returns a string of pedigree_width ending in a |\n"],["bar_mitzvah","Individual_record","Individual_record.html#method-i-bar_mitzvah","(&p)","<p>Short hand for event('BARM') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["bars","Chart","Chart.html#method-i-bars","(bitmap, depth)","<p>private  returns a string of spaces and '|', with the '|' being where the\nbitmap values are set to 1 ...\n"],["bas_mitzvah","Individual_record","Individual_record.html#method-i-bas_mitzvah","(&p)","<p>Short hand for event('BASM') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["birth","Individual_record","Individual_record.html#method-i-birth","(&p)","<p>Short hand for event('BIRT') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["blessing","Individual_record","Individual_record.html#method-i-blessing","(&p)","<p>Short hand for event('BLES') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["burial","Individual_record","Individual_record.html#method-i-burial","(&p)","<p>Short hand for event('BURI') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["caste_name","Individual_record","Individual_record.html#method-i-caste_name","(&p)","<p>Short hand for attribute('CAST') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["census","Family_record","Family_record.html#method-i-census","(&p)","<p>Short hand for event('CENS') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["census","Individual_record","Individual_record.html#method-i-census","(&p)","<p>Short hand for event('CENS') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["changed","GEDCOMBase","GEDCOMBase.html#method-i-changed","()","<p>Marks this object as having been altered so we know to synchronise it with\nthe DB.\n"],["changed?","GEDCOMBase","GEDCOMBase.html#method-i-changed-3F","()","<p>Tests for this object having been altered, so we know to synchronise it\nwith the DB.\n"],["child?","Individual_record","Individual_record.html#method-i-child-3F","(fam)","<p>child? is a consistency check, testing that this INDI record has a FAMC\nrecord to the given FAM record. ...\n"],["children","Family_record","Family_record.html#method-i-children","()","<p>Returns an array of children, or if a block is present, yields them one by\none.\n"],["christening","Individual_record","Individual_record.html#method-i-christening","(&p)","<p>Short hand for event('CHR') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["clear","Bit","Bit.html#method-i-clear","(i)","<p>Set bit i to 0.\n"],["clear?","Bit","Bit.html#method-i-clear-3F","(i)","<p>Return true if bit i is clear\n"],["confirmation","Individual_record","Individual_record.html#method-i-confirmation","(&p)","<p>Short hand for event('CONF') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["copyright","Header_data_record","Header_data_record.html#method-i-copyright","()",""],["create_class","TransmissionBase","TransmissionBase.html#method-i-create_class","(lineno, class_name)","<p>create_class() is part of the parsing process, and looks in the\nClassTracker class to see if this class ...\n"],["create_index","TransmissionBase","TransmissionBase.html#method-i-create_index","(lineno, index_name, key, value)","<p>create_index is part of the parsing process, and adds the key, value pair\nto the index index_name, creating ...\n"],["created?","GEDCOMBase","GEDCOMBase.html#method-i-created-3F","()","<p>Tests to see if this is a new object, not one we have loaded from elsewhere\n(say a DB)\n"],["cremation","Individual_record","Individual_record.html#method-i-cremation","(&p)","<p>Short hand for event('CREM') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["date","Date_record","Date_record.html#method-i-date","()","<p>If you want just one date, then this returns the first DATE record\n(probably the only one). GEDCOM says ...\n"],["date","Event_record","Event_record.html#method-i-date","()",""],["death","Individual_record","Individual_record.html#method-i-death","(&p)","<p>Short hand for event('DEAT') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["decendants","Decendant","Decendant.html#method-i-decendants","( individual , max_depth = 0 )",""],["decendants_of_name","Decendant","Decendant.html#method-i-decendants_of_name","( individual, max_depth )",""],["define","TransmissionBase","TransmissionBase.html#method-i-define","(class_name)",""],["defined","TransmissionBase","TransmissionBase.html#method-i-defined","(class_name)",""],["divorce","Family_record","Family_record.html#method-i-divorce","(&p)","<p>Short hand for event('DIV') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["divorce_filed","Family_record","Family_record.html#method-i-divorce_filed","(&p)","<p>Short hand for event('DIVF') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["dump","ParseState","ParseState.html#method-i-dump","()","<p>dump() is a debugging aid to print out the current ParseState's stack.\n"],["dump_indexes","Transmission","Transmission.html#method-i-dump_indexes","()","<p>debugging code to show what indexes were created and what keys are in each\nPrinting out the index values ...\n"],["each","GedString","GedString.html#method-i-each","()","<p>We aren't an array, but to simplify some code, the method each is defined\nto return our 1 value.\n"],["each","Gedcom","Gedcom.html#method-i-each","()",""],["each_with_index","GedString","GedString.html#method-i-each_with_index","()",""],["each_word","GedString","GedString.html#method-i-each_word","()","<p>yields the string word by word. Line separators in the string will also be\nyielded as words.\n"],["each_word_with_index","GedString","GedString.html#method-i-each_word_with_index","()","<p>yields the string word by word. Line separators in the string will also be\nyielded as words.\n"],["education","Individual_record","Individual_record.html#method-i-education","(&p)","<p>Short hand for attribute('EDUC') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["emigration","Individual_record","Individual_record.html#method-i-emigration","(&p)","<p>Short hand for event('EMIG') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["engagement","Family_record","Family_record.html#method-i-engagement","(&p)","<p>Short hand for event('ENGA') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["event","Family_record","Family_record.html#method-i-event","(type)","<p>Event looks in the Family_record for events, as specified by the type\nargument,  returning an array of ...\n"],["event","Individual_record","Individual_record.html#method-i-event","(type)","<p>Event looks in the Individual_record for events, as specified by the type\nargument,  returning an array ...\n"],["event_tag","Event_record","Event_record.html#method-i-event_tag","(tag)",""],["event_tag","Name_record","Name_record.html#method-i-event_tag","(tag)","<p>Attributes and Events have a common class, as they are essentially\nidentical.\n"],["exists?","ClassTracker","ClassTracker.html#method-c-exists-3F","(class_name)","<p>Returns true if the named class is in @@classes.\n"],["file","Gedcom","Gedcom.html#method-i-file","(*a)",""],["file","Gedcom","Gedcom.html#method-c-file","(*a)",""],["filename","Multimedia_record","Multimedia_record.html#method-i-filename","()","<p>Replacing :filename with multimedia_file_record could break some code,  so\ndef filename returns the filename ...\n"],["find","GEDCOMBase","GEDCOMBase.html#method-i-find","(*a)","<p>Find a XREF within this transmission. All classes inheriting from\nGEDCOMBase record the parent transmission ...\n"],["find","Transmission","Transmission.html#method-i-find","(index_name, key)","<p>Looks in a transmissions indexes for an index called index_name, returning\nthe value associated with ...\n"],["first_communion","Individual_record","Individual_record.html#method-i-first_communion","(&p)","<p>Short hand for event('FCOM') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["format","Multimedia_record","Multimedia_record.html#method-i-format","()","<p>Replacing :format with multimedia_format_record could break some code,  so\ndef format returns the format ...\n"],["graduation","Individual_record","Individual_record.html#method-i-graduation","(&p)","<p>Short hand for event('GRAD') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["has_name?","Individual_record","Individual_record.html#method-i-has_name-3F","()","<p>Test to see if we have a NAME record stored for this individual.\n"],["html?","Chart","Chart.html#method-i-html-3F","()","<p>Tests for html output being on.\n"],["husband","Family_record","Family_record.html#method-i-husband","()","<p>There should only ever be one husband record in a Family_record. If a women\nhas multiple husbands, as ...\n"],["id","Family_record","Family_record.html#method-i-id","()",""],["id","Individual_record","Individual_record.html#method-i-id","()",""],["immigration","Individual_record","Individual_record.html#method-i-immigration","(&p)","<p>Short hand for event('IMMI') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["index","GedLine","GedLine.html#method-i-index","()","<p>Returns the hash key for this GEDCOM LINE to lookup the action in the\nGedcomParser::TAG has.\n"],["is_attribute?","Individual_attribute_record","Individual_attribute_record.html#method-i-is_attribute-3F","(attribute)","<p>is_attribute? tests that this Individual_attribute_record is of this\nattribute type. The attribute type ...\n"],["is_event?","Event_record","Event_record.html#method-i-is_event-3F","(tag)",""],["last_state","ParseState","ParseState.html#method-i-last_state","()","<p>last_state() is the previous state on the stack, so we know the state we\ncame from.\n"],["lastbar","Chart","Chart.html#method-i-lastbar","(depth)",""],["lastspace","Chart","Chart.html#method-i-lastspace","()","<p>returns a String of spaces of width @pedigree_width - 1\n"],["lds_baptism","Individual_record","Individual_record.html#method-i-lds_baptism","(&p)","<p>Short hand for the event('BAPL') LDS Ordinance  passes on any block to the\nevent method. (The block is ...\n"],["lds_child_sealing","Individual_record","Individual_record.html#method-i-lds_child_sealing","(&p)","<p>Short hand for the event('SLGC') LDS Ordinance  passes on any block to the\nevent method. (The block is ...\n"],["lds_confirmation","Individual_record","Individual_record.html#method-i-lds_confirmation","(&p)","<p>Short hand for the event('CONL') LDS Ordinance  passes on any block to the\nevent method. (The block is ...\n"],["lds_endowment","Individual_record","Individual_record.html#method-i-lds_endowment","(&p)","<p>Short hand for the event('ENDL') LDS Ordinance  passes on any block to the\nevent method. (The block is ...\n"],["lds_spouse_sealing","Individual_record","Individual_record.html#method-i-lds_spouse_sealing","(&p)","<p>Short hand for the event('SLGS') LDS Sealing  passes on any block to the\nevent method. (The block is ...\n"],["level","ParseState","ParseState.html#method-i-level","()","<p>level() is the depth of the stack, less 1, which gives us the GEDCOM level\nwe are working with.\n"],["locked?","GEDCOMBase","GEDCOMBase.html#method-i-locked-3F","()","<p>Test for a Restriction notice for a locked record. Locked records mean that\nthe data is known to be correct, ...\n"],["marriage","Family_record","Family_record.html#method-i-marriage","(&p)","<p>Short hand for event('MARR') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["marriage_bann","Family_record","Family_record.html#method-i-marriage_bann","(&p)","<p>Short hand for event('MARB') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["marriage_contract","Family_record","Family_record.html#method-i-marriage_contract","(&p)","<p>Short hand for event('MARC') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["marriage_count","Individual_record","Individual_record.html#method-i-marriage_count","(&p)","<p>Short hand for attribute('NMR') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["marriage_license","Family_record","Family_record.html#method-i-marriage_license","(&p)","<p>Short hand for event('MARL') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["marriage_settlement","Family_record","Family_record.html#method-i-marriage_settlement","(&p)","<p>Short hand for event('MARS') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["name","Name_phonetic_record","Name_phonetic_record.html#method-i-name","()","<p>return the name as a string. It might be returned be the #phonetic_name\nmethod.\n\n<pre>or it might need to be ...</pre>\n"],["name","Name_record","Name_record.html#method-i-name","()","<p>return the name as a string. It might be returned be the\nIndividual_attribute_record#value method.\n\n<pre>or ...</pre>\n"],["name","Name_romanized_record","Name_romanized_record.html#method-i-name","()","<p>return the name as a string. It might be returned be the romanized_name\nmethod.\n\n<pre>or it might need to be ...</pre>\n"],["names","Individual_record","Individual_record.html#method-i-names","()","<p>Names looks in the Individual_record for Name_records, returning an array\nof the Name_records found. ...\n"],["national_id_number","Individual_record","Individual_record.html#method-i-national_id_number","(&p)","<p>Short hand for attribute('IDNO') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["national_origin","Individual_record","Individual_record.html#method-i-national_origin","(&p)","<p>Short hand for attribute('NATI') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["naturalization","Individual_record","Individual_record.html#method-i-naturalization","(&p)","<p>Short hand for event('NATU') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["new","Address_record","Address_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Adoption_record","Adoption_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Association_record","Association_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Bit","Bit.html#method-c-new","(bm = 0)","<p>create a bit store using Fixnum. Initialize to 0.\n"],["new","Btree","Btree.html#method-c-new","()",""],["new","Btree_data","Btree_data.html#method-c-new","(name, individual_record)",""],["new","Btree_node","Btree_node.html#method-c-new","(data = nil)",""],["new","Cause_record","Cause_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Change_date_record","Change_date_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Character_set_record","Character_set_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Chart","Chart.html#method-c-new","( html=false, pedigree_width=PEDIGREE_WIDTH)","<p>Create a new Chart object.\n\n<pre>if html is true, then the chart has HTML tags embeded in it.\nelse the chart ...</pre>\n"],["new","Citation_data_record","Citation_data_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Citation_event_type_record","Citation_event_type_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Copyright_record","Copyright_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Corporate_record","Corporate_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Date_record","Date_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Decendant","Decendant.html#method-c-new","()",""],["new","Encoded_line_record","Encoded_line_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Event_record","Event_record.html#method-c-new","(*a)",""],["new","Events_list_record","Events_list_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Family_record","Family_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","GEDCOMBase","GEDCOMBase.html#method-c-new","(transmission = nil, changed=true,created=true)","<p>Create a new GEDCOMBase or most likely a subclass of GEDCOMBase.\n<p>transmission is the current transmission ...\n"],["new","GedLine","GedLine.html#method-c-new","(*data)","<p>GedLine.new(*data) takes a GEDCOM line as word array and does all the work\nto categorize the tokens. ...\n"],["new","GedString","GedString.html#method-c-new","(word_array)","<p>takes a word array from the parser and creates a space separated string.\nAlso excepts a String, assigning ...\n"],["new","Gedcom","Gedcom.html#method-c-new","(transmission = nil)",""],["new","GedcomParser","GedcomParser.html#method-c-new","(transmission = Transmission.new)","<p>Create a new GedcomParser instance Optional transmission argument provides\nan external Transmission object ...\n"],["new","Gedcom_record","Gedcom_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Header_data_record","Header_data_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Header_record","Header_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Header_source_record","Header_source_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Individual_record","Individual_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Instruction","Instruction.html#method-c-new","(instruction)",""],["new","Name_phonetic_record","Name_phonetic_record.html#method-c-new","(*a)",""],["new","Name_record","Name_record.html#method-c-new","(*a)",""],["new","Name_romanized_record","Name_romanized_record.html#method-c-new","(*a)",""],["new","ParseState","ParseState.html#method-c-new","(state = nil, target = nil)","<p>Create the initial state. Optional arguments:\n<p>state, if it has a value, is pushed onto the state stack ...\n"],["new","Placename_map_record","Placename_map_record.html#method-c-new","(*a)",""],["new","Placename_phonetic_record","Placename_phonetic_record.html#method-c-new","(*a)",""],["new","Placename_romanized_record","Placename_romanized_record.html#method-c-new","(*a)",""],["new","Refn_record","Refn_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Repository_caln","Repository_caln.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Repository_citation_record","Repository_citation_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Repository_record","Repository_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Source_scope_record","Source_scope_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Submission_record","Submission_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Submitter_record","Submitter_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Text_record","Text_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Trailer_record","Trailer_record.html#method-c-new","(*a)","<p>new sets up the state engine arrays @this_level and @sub_level, which drive\nthe to_gedcom method generating ...\n"],["new","Transmission","Transmission.html#method-c-new","(*a)",""],["new","TransmissionBase","TransmissionBase.html#method-c-new","(*a)","<p>new creates initializes the arrays for each of the GEDCOM level 0 record\ntypes.\n"],["new","Xref","Xref.html#method-c-new","(index, xref_value)",""],["no_tabs","GEDCOMBase","GEDCOMBase.html#method-c-no_tabs","()","<p>sets @@tabs to false. This is the default as a lot of GEDCOM parsers don't\nlike leading white space on ...\n"],["number_children","Individual_record","Individual_record.html#method-i-number_children","(&p)","<p>Short hand for attribute('NCHI') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["occupation","Individual_record","Individual_record.html#method-i-occupation","(&p)","<p>Short hand for attribute('OCCU') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["ordination","Individual_record","Individual_record.html#method-i-ordination","(&p)","<p>Short hand for event('ORDN') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["output_pedigree_name","Chart","Chart.html#method-i-output_pedigree_name","( indiv, depth, famc, fams, bitmap, prefix, child_marker, blank, suffix, max_depth )","<p>Prints out a line on the chart with the individuals name and all the\nconnecting bars between other parts ...\n"],["own_family","Families_individuals","Families_individuals.html#method-i-own_family","()",""],["parents_family","Families_individuals","Families_individuals.html#method-i-parents_family","()",""],["parents_family","Individual_record","Individual_record.html#method-i-parents_family","()","<p>Finds the parent's family record(s) and returns the Family_record object in\nan array. This allows for ...\n"],["parse","GedcomParser","GedcomParser.html#method-i-parse","(lineno, line)","<p>Parse a GEDCOM line, adding it to the Transmission class hierarchy. Takes a\nlineno for reporting errors ...\n"],["path","Object","Object.html#method-i-path","(s,fs='/')","<p>Gedcom class holds an array of GEDCOM transmissions (that is parsed GEDCOM\nfiles) Each transmission relates ...\n"],["phonetic_name","Name_phonetic_record","Name_phonetic_record.html#method-i-phonetic_name","()",""],["physical_description","Individual_record","Individual_record.html#method-i-physical_description","(&p)","<p>Short hand for attribute('DSCR') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["place","Event_record","Event_record.html#method-i-place","()","<p>where the event took place. We are reporting only the first place as a\nstring. If you want all the places ...\n"],["place","Place_record","Place_record.html#method-i-place","()","<p>When wanting just one place, the GEDCOM standard says to use the first PLAC\nrecord. If you want all the ...\n"],["pop","ParseState","ParseState.html#method-i-pop","()","<p>pop() reverts to the previous state.\n"],["pop","TransmissionBase","TransmissionBase.html#method-i-pop","()","<p>pop() is part of the parsing process, and removes target objects from their\nstack, which must remain ...\n"],["possessions","Individual_record","Individual_record.html#method-i-possessions","(&p)","<p>Short hand for attribute('PROP') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["primary_name","Individual_record","Individual_record.html#method-i-primary_name","()","<p>Primary_name returns the first name (as a string) defined in the\n@name_record array (and probably the ...\n"],["private?","GEDCOMBase","GEDCOMBase.html#method-i-private-3F","()","<p>Test for a Restriction notice for privacy People may request that a records\ncontents not be available ...\n"],["probate","Individual_record","Individual_record.html#method-i-probate","(&p)","<p>Short hand for event('PROB') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["religion","Individual_record","Individual_record.html#method-i-religion","(&p)","<p>Short hand for attribute('RELI') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["residence","Individual_record","Individual_record.html#method-i-residence","(&p)","<p>Short hand for attribute('RESI') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["retirement","Individual_record","Individual_record.html#method-i-retirement","(&p)","<p>Short hand for event('RETI') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["romanized_name","Name_romanized_record","Name_romanized_record.html#method-i-romanized_name","()",""],["save","GEDCOMBase","GEDCOMBase.html#method-i-save","()","<p>This is the default method, used by all classes inheriting from GEDCOMBase,\nto recursively save the object ...\n"],["self_check","Family_record","Family_record.html#method-i-self_check","()","<p>Check the xrefs are valid.\n"],["self_check","Individual_record","Individual_record.html#method-i-self_check","()",""],["self_check","Transmission","Transmission.html#method-i-self_check","()",""],["set","Bit","Bit.html#method-i-set","(i)","<p>set the bit i to 1. Relies on auto promotion of Fixnum to Bignum.\n"],["set?","Bit","Bit.html#method-i-set-3F","(i)","<p>Return true if bit i is set\n"],["sex","Individual_record","Individual_record.html#method-i-sex","(&p)","<p>Short hand for attribute('SEX') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["social_security_number","Individual_record","Individual_record.html#method-i-social_security_number","(&p)","<p>Short hand for attribute('SSN') passes on any block to the event method.\n(The block is the &amp;p argument, ...\n"],["spouse?","Individual_record","Individual_record.html#method-i-spouse-3F","(fam)","<p>spouse? is a consistency check, testing that this INDI record has a FAMS\nrecord to the given FAM record. ...\n"],["spouses","Individual_record","Individual_record.html#method-i-spouses","()","<p>Finds the family record for each spouse (or fellow parent) and returns the\nFamily_record objects in an ...\n"],["state","ParseState","ParseState.html#method-i-state","()","<p>state() is the last item in the Array, hence the top of the stack.\n"],["summary","GedcomParser","GedcomParser.html#method-i-summary","()","<p>Dump the statistics of what we have parsed and stored in the Transission\nobject.\n"],["summary","TransmissionBase","TransmissionBase.html#method-i-summary","()","<p>summary() prints out the number of each level 0 record type the we have\njust parsed.\n"],["tabs","GEDCOMBase","GEDCOMBase.html#method-c-tabs","()","<p>sets @@tabs to true. This indents gedcom lines on output a tab per level. \nThis is useful if pretty printing, ...\n"],["time","Date_record","Date_record.html#method-i-time","()","<p>If you want just one date, then this returns the first TIME record\n(probably the only one). GEDCOM says ...\n"],["title","Individual_record","Individual_record.html#method-i-title","(&p)","<p>Short hand for attribute('TITL') passes on any block to the event method \n(The block is the &amp;p argument, ...\n"],["to_db","GEDCOMBase","GEDCOMBase.html#method-i-to_db","(level = 0, this_level=[], sub_levels=[])","<p>Need to flesh this out. Right now it pretends to work and marks records as\nsaved.\n"],["to_gedcom","Event_age_record","Event_age_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Event_record","Event_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Families_individuals","Families_individuals.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","GEDCOMBase","GEDCOMBase.html#method-i-to_gedcom","(level = 0)","<p>This is the default method, used by all classes inheriting from GEDCOMBase,\nto recursively generate  ...\n"],["to_gedcom","Multimedia_citation_record","Multimedia_citation_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Multimedia_file_record","Multimedia_file_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Multimedia_format_record","Multimedia_format_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Multimedia_obje_file_record","Multimedia_obje_file_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Multimedia_obje_format_record","Multimedia_obje_format_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Multimedia_record","Multimedia_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Note_citation_record","Note_citation_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Note_record","Note_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Place_record","Place_record.html#method-i-to_gedcom","(level=0)",""],["to_gedcom","Source_citation_record","Source_citation_record.html#method-i-to_gedcom","(level=0)","<p>to_gedcom sets up the state engine arrays @this_level and @sub_level, which\ndrive the parent class to_gedcom ...\n"],["to_gedcom","Source_record","Source_record.html#method-i-to_gedcom","(level=0)","<p>to_gedcom sets up the state engine arrays @this_level and @sub_level, which\ndrive the parent class to_gedcom ...\n"],["to_s","Bit","Bit.html#method-i-to_s","()","<p>print the Bit array as a binary number.\n"],["to_s","ClassTracker","ClassTracker.html#method-c-to_s","()","<p>return the state of each of the classes recorded in the @@classes hash, as\na string.\n"],["to_s","GEDCOMBase","GEDCOMBase.html#method-i-to_s","()","<p>create a string from the objects instance variables, one per line, in the\nform \"variable = value ...\n"],["to_s","GedLine","GedLine.html#method-i-to_s","()","<p>Returns a String with the @level, @xref, @tag and @data values.\n"],["to_s_ordered","GEDCOMBase","GEDCOMBase.html#method-i-to_s_ordered","(variable_list)","<p>to_s with the variable list (as symbols) passed to it in the order they are\nto be printed\n"],["to_s_r","GEDCOMBase","GEDCOMBase.html#method-i-to_s_r","(level = 0, this_level=[], sub_levels=[])","<p>recursive to_s. We want to print this object and its sub-records. the\ndefinition of how we want to print ...\n"],["token_to_s","GEDCOMBase","GEDCOMBase.html#method-i-token_to_s","(token)","<p>All our values are stored as arrays of words. This is quite useful in word\nwrapping of NOTES, TEXT, etc, ...\n"],["type","Multimedia_format_record","Multimedia_format_record.html#method-i-type","()",""],["type","Multimedia_obje_format_record","Multimedia_obje_format_record.html#method-i-type","()",""],["update_field","TransmissionBase","TransmissionBase.html#method-i-update_field","(lineno, field, data_type, data)","<p>update_field() is part of the parsing process, calls add_to_class_field.\nI'm sure there is a reason  ...\n"],["user_tag","GedLine","GedLine.html#method-i-user_tag","()","<p>creates as NOTE from a user defined tag. sets the @user field to true.\n"],["user_tag?","GedLine","GedLine.html#method-i-user_tag-3F","()","<p>Test for this being a user Tag.\n"],["validate","TransmissionBase","TransmissionBase.html#method-i-validate","(lineno, tokens, max_data_size)","<p>validate() is part of the parsing process, and checks that the GEDCOM line\nfalls within the data length ...\n"],["value","Individual_attribute_record","Individual_attribute_record.html#method-i-value","()","<p>value retrieves the value from the Event_record#event_status. this minor\nhack lets us share methods with ...\n"],["value=","Individual_attribute_record","Individual_attribute_record.html#method-i-value-3D","(value)","<p>value= stores the value in the Event_record#event_status. this minor hack\nlets us share methods with ...\n"],["wife","Family_record","Family_record.html#method-i-wife","()","<p>There should only ever be one wife record in a Family_record. If a man has\nmultiple wives, as some cultures ...\n"],["will","Individual_record","Individual_record.html#method-i-will","(&p)","<p>Short hand for event('WILL') passes on any block to the event method. (The\nblock is the &amp;p argument, ...\n"],["xref_check","Association_record","Association_record.html#method-i-xref_check","(level, tag, xref)","<p>validate that the record referenced by the XREF actually exists in this\ntransmission. Genearte a warning ...\n"],["xref_check","GEDCOMBase","GEDCOMBase.html#method-i-xref_check","( level, tag, xref )","<p>validate that the record referenced by the XREF actually exists in this\ntransmission. Genearte a warning ...\n"],["History","","History_txt.html","","<p>0.9.3 / 2013-01-10\n<p>transcription of code from original C source base.\n<p>Bug fix to GEDCOMBase.xref_check ...\n"],["Manifest","","Manifest_txt.html","","<p>History.txt Manifest.txt README.txt Rakefile lib/gedcom/address_record.rb\nlib/gedcom/adoption_record.rb ...\n"],["README","","README_txt.html","","<p>gedcom\n<p>rbur004.github.com/gedcom/\n<p>Source github.com/rbur004/gedcom\n"],["README","","test_data/README_txt.html","","<p>-------------------------------------------------------------------\r  \nCONTENTS OF TEST GEDCOM ARCHIVE ...\n"]]}}